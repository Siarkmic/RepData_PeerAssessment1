actMean <- activity.cc[, mean(steps), by = interval]
actMean$V1 <- round(actMean$V1)
colnames(actMean)[2] <- "impSteps"
actMean
act.imp <- merge(activity, actMean, by='interval')
act.imp$steps <- ifelse(is.na(act.imp$steps),
act.imp$impSteps,
act.imp$steps)
set(act.imp, j = 'impSteps', value = NULL)
act.imp
act.sumSteps <- act.imp[, sum(steps), by = date]
colnames(act.sumSteps)[2] <- "steps"
head(act.sumSteps)
library(ggplot2)
ggplot(act.sumSteps, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
act.meanSteps <- act.sumSteps.cc[, mean(steps),]
act.medianSteps <- act.sumSteps.cc[, median(steps),]
act.meanSteps
act.medianSteps
activity <- data.table(activity.raw)
act.sumSteps <- activity[, sum(steps), by = date]
colnames(act.sumSteps)[2] <- "steps"
head(act.sumSteps)
library(ggplot2)
ggplot(act.sumSteps, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
act.sumSteps.cc <- act.sumSteps[complete.cases(act.sumSteps), ]
act.meanSteps <- act.sumSteps.cc[, mean(steps),]
act.medianSteps <- act.sumSteps.cc[, median(steps),]
act.meanSteps
act.medianSteps
act.sumStepsIMP <- act.imp[, sum(steps), by = date]
colnames(act.sumStepsIMP)[2] <- "steps"
head(act.sumStepsIMP)
library(ggplot2)
ggplot(act.sumStepsIMP, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
act.meanSteps <- act.sumStepsIMP[, mean(steps),]
act.medianSteps <- act.sumStepsIMP[, median(steps),]
act.meanSteps
act.medianSteps
act.meanStepsIMP <- act.sumStepsIMP[, mean(steps),]
act.medianStepsIMP <- act.sumStepsIMP[, median(steps),]
act.meanStepsIMP
act.medianStepsIMP
activity <- data.table(activity.raw)
act.sumSteps <- activity[, sum(steps), by = date]
colnames(act.sumSteps)[2] <- "steps"
head(act.sumSteps)
library(ggplot2)
ggplot(act.sumSteps, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
act.sumSteps.cc <- act.sumSteps[complete.cases(act.sumSteps), ]
act.meanSteps <- act.sumSteps.cc[, mean(steps),]
act.medianSteps <- act.sumSteps.cc[, median(steps),]
act.meanSteps
act.medianSteps
act.meanSteps/act.meanStepsIMP
act.medianSteps/act.medianStepsIMP
1-act.meanSteps/act.meanStepsIMP
1-act.medianSteps/act.medianStepsIMP
act.all <- merge(activity, act.imp)
View(act.imp)
act.all <- cbind(activity, act.imp )
View(act.imp)
View(act.imp)
act.all <- merge(activity, act.imp, by = c(interval, date)
act.all <- merge(activity, act.imp, by = c(interval, date))
act.all <- merge(activity, act.imp, by = c("interval", "date"))
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")
act.all <- merge(activity, act.imp, by = c("interval", "date"))
act.all
act.imp
colnames(act.imp)[2] <- "impSteps"
act.all <- merge(activity, act.imp, by = c("interval", "date"))
act.all
ggplot(act.all, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
head(act.sumStepsIMP)
act.all <- merge(act.sumSteps, act.sumStepsIMP, by = c("interval", "date"))
head(act.all)
act.all.sumSteps <- merge(act.sumSteps, act.sumStepsIMP, by = c("interval", "date"))
head(act.all.sumSteps)
act.all.sumSteps <- merge(act.sumSteps, act.sumStepsIMP, by = c("interval", "date"))
head(act.all)
act.all <- merge(act.sumSteps, act.sumStepsIMP, by = c("interval", "date"))
act.all <- merge(act.sumSteps, act.sumStepsIMP, by = date ))
act.all <- merge(act.sumSteps, act.sumStepsIMP, by = date )
head(act.all)
act.sumSteps
head(act.sumSteps)
head(act.sumStepsIMP)
colnames(act.sumStepsIMP)[2] <- "impSteps"
head(act.sumSteps)
head(act.sumStepsIMP)
act.all <- merge(act.sumSteps, act.sumStepsIMP, by = date )
act.all <- merge(act.sumSteps, act.sumStepsIMP, by = "date" )
act.all <- merge(act.sumSteps, act.sumStepsIMP, by = c("date") )
head(act.all)
head(act.sumStepsIMP)
act.sumSteps$date <- as.Date(act.sumSteps$date, format = "%Y-%m-%d")
act.sumStepsIMP$date <- as.Date(act.sumStepsIMP$date, format = "%Y-%m-%d")
act.all.sumSteps <- merge(act.sumSteps, act.sumStepsIMP, by = c("date") )
head(act.sumStepsIMP)
t
ggplot(act.sumStepsIMP, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
head(act.sumStepsIMP)
act.all.sumSteps <- merge(act.sumSteps, act.sumStepsIMP, by = c("date") )
head(act.sumStepsIMP)
head(act.sumSteps)
head(act.sumStepsIMP)
act.all.sumSteps <- merge(act.sumSteps, act.sumStepsIMP, by = c("date") )
head(act.all.sumSteps)
ggplot(act.all.sumSteps, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all.sumSteps, aes(steps, impSteps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
act.all.sumSteps %>%
gather("stpes", 'impSteps', key = "type", value = "Steps")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
act.all.sumSteps %>%
gather("stpes", 'impSteps', key = "type", value = "Steps")
act.all.sumSteps %>%
gather("Steps", 'impSteps', key = "type", value = "Steps")
head(act.all.sumSteps)
act.all.sumSteps %>%
gather("steps", 'impSteps', key = "type", value = "steps")
act.all.sumSteps <- act.all.sumSteps %>%
gather("steps", 'impSteps', key = "type", value = "steps")
ggplot(act.all.sumSteps, aes(type)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all.sumSteps, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all.sumSteps, aes(steps, fill=type)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all.sumSteps, aes(steps, color=type, fill=type)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all.sumSteps, aes(steps)) +
geom_histogram(fill= type , binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all.sumSteps, aes(steps, color=type, fill=type)) +
geom_histogram(position="identity", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all.sumSteps, aes(steps, color=type, fill=type)) +
geom_histogram(position="identity", alpha=0.5, binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all.sumSteps, aes(steps, color=type, fill=type)) +
geom_histogram(position="identity", alpha=0.5, binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
head(act.all.sumSteps)
ggplot(act.all.sumSteps, aes(steps, color=type)) +
geom_histogram(position="identity", alpha=0.5, binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
View(act.all.sumSteps)
View(act.all.sumSteps)
ggplot(act.all.sumSteps, aes(steps, color=type, fill=type)) +
geom_histogram(position="identity", alpha=0.5)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
p <- ggplot(act.all.sumSteps, aes(x=steps, color=type)) +
geom_histogram(fill="white", position="dodge")
p + scale_color_brewer(palette="Paired") +
theme_classic()+theme(legend.position="top")
p + scale_color_brewer(palette="Dark2") +
theme_minimal()+theme_classic()+theme(legend.position="top")
p + scale_color_brewer(palette="Accent") +
theme_minimal()+theme(legend.position="top")
ggplot(act.all.sumSteps, aes(steps, color=type, fill=type)) +
geom_histogram(position="identity", alpha=0.5)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.sumStepsIMP, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.sumStepsIMP, aes(impSteps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all.sumSteps, aes(steps, color=type, fill=type)) +
geom_histogram(position="identity", alpha=0.5)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all.sumSteps, aes(steps, color=type, fill=type)) +
geom_histogram(position="identity", alpha=0.5, binwidth = 2500))+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all.sumSteps, aes(steps, color=type, fill=type)) +
geom_histogram(position="identity", alpha=0.5, binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all.sumSteps, aes(steps, color=type, fill=type)) +
geom_histogram(position="dodged", alpha=0.5, binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all.sumSteps, aes(steps, color=type, fill=type)) +
geom_histogram(position="dashed", alpha=0.5, binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
ggplot(act.all.sumSteps, aes(steps, color=type, fill=type)) +
geom_histogram(position="dodge", alpha=0.5, binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
weekdays()
?weekdays
View(act.imp)
View(act.imp)
View(act.all)
View(act.all)
weekdays(act.all$date)
act.all$weekdays <- weekdays(act.all$date)
act.all.weekdays <- subset(act.all, weekdays == c("poniedziałek", "wtorek", "środa", "czwartek", "piątek"))
View(act.all.weekdays)
View(act.all.weekdays)
act.all.weekends <- subset(act.all, weekdays == c("sobota","niedziela"))
act.all.weekdays.sumSteps <- act.imp[, sum(impSteps), by = interval]
act.all.weekdays.sumSteps <- act.all.weekdays[, sum(impSteps), by = interval]
act.all.weekends.sumSteps <- act.all.weekends[, sum(impSteps), by = interval]
act.all$dayType <- as.factor(ifelse(act.all$weekdays ==c("sobota","niedziela"), "weekend", "weekday" ))
View(act.all)
View(act.all)
act.all$dayType <- as.factor(ifelse(act.all$weekdays = c("sobota","niedziela"), "weekend", "weekday" ))
act.all$dayType <- as.factor(ifelse(act.all$weekdays == c("sobota","niedziela"), "weekend", "weekday" ))
View(act.all)
View(act.all)
act.all$weekdays == c("sobota","niedziela")
View(act.all)
act.all$weekdays
act.all$dayType <- as.factor(ifelse(act.all$weekdays == c("sobota","niedziela"), "weekend", "weekday" ))
act.all$weekdays == c("sobota","niedziela")
act.all$weekdays == c("sobota","niedziela")
act.all$weekdays <- as.POSIXlt(act.all$date)
View(act.all)
View(act.all)
View(act.all)
View(act.all)
act.all$weekdays <- as.POSIXlt(act.all$date)$wday
View(act.all)
View(act.all)
act.all$dayType <- as.factor(ifelse(act.all$weekdays == c("0","6"), "weekend", "weekday" ))
View(act.all)
View(act.all)
act.all$dayType <- ifelse(act.all$weekdays == c("0","6"), "weekend", "weekday" )
View(act.all)
View(act.all)
act.all$weekdays == c("0","6")
act.all$dayType <- as.factor(ifelse(act.all$weekdays == c('0','6'), 'weekend', 'eekday'))
View(act.all)
View(act.all)
act.all$dayType <- as.factor(ifelse(act.all$weekdays == c('0'), 'weekend', 'eekday'))
View(act.all)
View(act.all)
act.all$weekdays <- weekdays(act.all$date)
act.all$dayType <- as.factor(ifelse(act.all$weekdays == 'sobota' | act.all$weekdays == 'niedziela', 'weekend', 'eekday'))
View(act.all)
View(act.all)
act.all$dayType <- as.factor(ifelse(act.all$weekdays == 'sobota' | act.all$weekdays == 'niedziela', 'weekend', 'weekday'))
act.all.weekdays.sumSteps <- act.all[, mean(impSteps), by = interval]
act.all.weekdays.sumSteps
act.all.weekdays.sumSteps <- act.all[, mean(impSteps), by = interval, dayType]
act.all.weekdays.sumSteps <- act.all[, mean(impSteps), by = c(interval, dayType)]
act.all.weekdays.sumSteps <- act.all[, mean(impSteps), by = c('interval', 'dayType')]
act.all.weekdays.sumSteps
ggplot(act.all.weekdays.sumSteps) +
geom_bar(aes(V1)) +
facet_wrap(~dayType)
ggplot(act.all.weekdays.sumSteps) +
geom_line(aes(V1)) +
facet_wrap(~dayType)
ggplot(act.all.weekdays.sumSteps) +
geom_line(aes(x=V1, y=interval)) +
facet_wrap(~dayType)
ggplot(act.all.weekdays.sumSteps) +
geom_line(aes(y=V1, x=interval)) +
facet_wrap(~dayType)
ggplot(act.all.weekdays.sumSteps) +
geom_line(aes(y=V1, x=interval)) +
facet_wrap(dayType ~.)
ggplot(act.all.weekdays.sumSteps) +
geom_line(aes(y=V1, x=interval)) +
facet_wrap(dayType~)
ggplot(act.all.weekdays.sumSteps) +
geom_line(aes(y=V1, x=interval)) +
facet_wrap(~dayType)
ggplot(act.all.weekdays.sumSteps) +
geom_line(aes(y=V1, x=interval)) +
facet_wrap(dayType~)
ggplot(act.all.weekdays.sumSteps) +
geom_line(aes(y=V1, x=interval)) +
facet_wrap(dayType~)
ggplot(act.all.weekdays.sumSteps) +
geom_line(aes(y=V1, x=interval)) +
facet_wrap(dayType ~ )
ggplot(act.all.weekdays.sumSteps) +
geom_line(aes(y=V1, x=interval)) +
facet_wrap (dayType ~ )
ggplot(act.all.weekdays.sumSteps) +
geom_line(aes(y=V1, x=interval)) +
facet_wrap(dayType ~. )
ggplot(act.all.weekdays.sumSteps) +
geom_line(aes(y=V1, x=interval)) +
facet_wrap(dayType ~ V1)
=
ggplot(act.all.weekdays.sumSteps) +
geom_line(aes(y=V1, x=interval)) +
facet_wrap(dayType ~ .)
ggplot(act.all.weekdays.sumSteps) +
geom_line(aes(y=V1, x=interval)) +
facet_wrap(dayType ~ interval)
ggplot(act.all.weekdays.sumSteps, aes(x=interval, y=V1) ) +
geom_line() +
facet_grid(dayType ~ )
ggplot(act.all.weekdays.sumSteps, aes(x=interval, y=V1) ) +
geom_line() +
facet_grid(dayType ~. )
library(data.table)
activity <- data.table(activity.raw)
act.sumSteps <- activity[, sum(steps), by = date]
colnames(act.sumSteps)[2] <- "steps"
head(act.sumSteps)
library(ggplot2)
ggplot(act.sumSteps, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
knitr::opts_chunk$set(echo = TRUE)
activity <- read.csv("activity.csv")
library(ggplot2)
ggplot(act.sumSteps, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
library(ggplot2)
ggplot(act.sumSteps, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
library(ggplot2)
ggplot(act.sumSteps, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
knitr::opts_chunk$set(echo = TRUE)
activity <- read.csv("activity.csv")
library(data.table)
activity <- data.table(activity.raw)
act.sumSteps <- activity[, sum(steps), by = date]
colnames(act.sumSteps)[2] <- "steps"
head(act.sumSteps)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
activity <- read.csv("activity.csv")
library(data.table)
activity <- data.table(activity.raw)
act.sumSteps <- activity[, sum(steps), by = date]
colnames(act.sumSteps)[2] <- "steps"
head(act.sumSteps)
library(ggplot2)
ggplot(act.sumSteps, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
# remove NA's
act.sumSteps.cc <- act.sumSteps[complete.cases(act.sumSteps), ]
act.meanSteps <- act.sumSteps.cc[, mean(steps),]
act.medianSteps <- act.sumSteps.cc[, median(steps),]
# Mean total number of steps taken per day
act.meanSteps
# Median total number of steps taken per day
act.medianSteps
activity.cc <- activity[complete.cases(activity)]
act.meanStepsByint <- activity.cc[, mean(steps), by = interval]
colnames(act.meanStepsByint)[2] <- "steps"
head(act.meanStepsByint)
ggplot(act.meanStepsByint, aes(x= interval, y=steps))+
geom_line()+
labs(x="5-minute interval", y="average number of steps taken")+
labs(title="the average number of steps taken, averaged across all days")
# Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?
colMax <- function(data) sapply(data, max, na.rm = TRUE)
Max <- colMax(act.meanStepsByint)
IntMax <- act.meanStepsByint[which(steps == Max[2] ),]
# Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with NAs)
sum(!complete.cases(activity))
# Devise a strategy for filling in all of the missing values in the dataset.
# The strategy does not need to be sophisticated. For example, you could use the mean/median for that day,
# or the mean for that 5-minute interval, etc.
activity$date <- as.Date(activity$date, format = "%Y-%m-%d")
# Calculate the number of missing dates
datesInRange <- seq.Date(from = min(activity$date),
to = max(activity$date),
by='1 day')
dateNA <- sum(!activity$date[complete.cases(activity)] %in% datesInRange)
dateNA
# no missing dates
# calculatingt mean for interval for imputation
actMean <- activity.cc[, mean(steps), by = interval]
actMean$V1 <- round(actMean$V1)
colnames(actMean)[2] <- "impSteps"
actMean
## Create a new dataset that is equal to the original dataset but with the missing data filled in.
# Merge the replacement values
act.imp <- merge(activity, actMean, by='interval')
# Replace the missing values
act.imp$steps <- ifelse(is.na(act.imp$steps),
act.imp$impSteps,
act.imp$steps)
# Remove unnecesary data
set(act.imp, j = 'impSteps', value = NULL)
act.imp
## Make a histogram of the total number of steps taken each day and Calculate and
## report the mean and median total number of steps taken per day.
act.sumStepsIMP <- act.imp[, sum(steps), by = date]
colnames(act.sumStepsIMP)[2] <- "steps"
head(act.sumStepsIMP)
library(ggplot2)
ggplot(act.sumStepsIMP, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
# Calculate and report the mean and median total number of steps taken per day
act.meanStepsIMP <- act.sumStepsIMP[, mean(steps),]
act.medianStepsIMP <- act.sumStepsIMP[, median(steps),]
# Mean total number of steps taken per day
act.meanStepsIMP
# Median total number of steps taken per day
act.medianStepsIMP
## Do these values differ from the estimates from the first part of the assignment?
1-act.meanSteps/act.meanStepsIMP
1-act.medianSteps/act.medianStepsIMP
## What is the impact of imputing missing data on the estimates of the total daily number of steps?
colnames(act.sumStepsIMP)[2] <- "impSteps"
act.sumSteps$date <- as.Date(act.sumSteps$date, format = "%Y-%m-%d")
act.sumStepsIMP$date <- as.Date(act.sumStepsIMP$date, format = "%Y-%m-%d")
act.all.sumSteps <- merge(act.sumSteps, act.sumStepsIMP, by = c("date") )
head(act.all.sumSteps)
library(tidyverse)
act.all.sumSteps <- act.all.sumSteps %>%
gather("steps", 'impSteps', key = "type", value = "steps")
head(act.all.sumSteps)
ggplot(act.all.sumSteps, aes(steps, color=type, fill=type)) +
geom_histogram(position="dodge", alpha=0.5, binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
act.all$weekdays <- weekdays(act.all$date)
act.all$dayType <- as.factor(ifelse(act.all$weekdays == 'sobota' | act.all$weekdays == 'niedziela', 'weekend', 'weekday'))
# Make a panel plot containing a time series plot (i.e. type = "l") of the 5-minute interval (x-axis)
# and the average number of steps taken, averaged across all weekday days or weekend days (y-axis).
# The plot should look something like the following, which was created using simulated data:
act.all.weekdays.sumSteps <- act.all[, mean(impSteps), by = c('interval', 'dayType')]
ggplot(act.all.weekdays.sumSteps, aes(x=interval, y=V1) ) +
geom_line() +
facet_grid(dayType ~. )
act.all$weekdays <- weekdays(act.all$date)
act.all$dayType <- as.factor(ifelse(act.all$weekdays == 'sobota' | act.all$weekdays == 'niedziela', 'weekend', 'weekday'))
# Make a panel plot containing a time series plot (i.e. type = "l") of the 5-minute interval (x-axis)
# and the average number of steps taken, averaged across all weekday days or weekend days (y-axis).
# The plot should look something like the following, which was created using simulated data:
act.all.weekdays.sumSteps <- act.all[, mean(impSteps), by = c('interval', 'dayType')]
ggplot(act.all.weekdays.sumSteps, aes(x=interval, y=V1) ) +
geom_line() +
facet_grid(dayType ~. )
library(ggplot2)
library(ggplot2)
ggplot(act.sumSteps, aes(steps)) +
geom_histogram(fill="lightblue", binwidth = 2500)+
labs(x="# of Steps", y="Frequency") +
labs(title="Steps Daily")
install.packages("ggplot2")
install.packages("rlang")
